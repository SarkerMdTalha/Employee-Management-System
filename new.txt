
CREATE TABLE Employees (
  EmployeeID INT AUTO_INCREMENT PRIMARY KEY,
  Name VARCHAR(255) NOT NULL,
  Designation VARCHAR(255),
  Experience INT
);

CREATE TABLE SalaryDetails (
  SalaryID INT AUTO_INCREMENT PRIMARY KEY,
  EmployeeID INT,
  CurrentSalary DECIMAL(10,2),
  FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);


CREATE TABLE SalaryInHand (
  SalaryInHandID INT AUTO_INCREMENT PRIMARY KEY,
  EmployeeID INT,
  NetSalary DECIMAL(10,2),
  TaxDeduction DECIMAL(10,2),
  Fund DECIMAL(10,2),
  OtherDeductions DECIMAL(10,2),
  FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);


CREATE TABLE SalaryIncrements (
  IncrementID INT AUTO_INCREMENT PRIMARY KEY,
  EmployeeID INT,
  EffectiveDate DATE,
  IncrementAmount DECIMAL(10,2),
  FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);


CREATE TABLE Savings (
  SavingsID INT AUTO_INCREMENT PRIMARY KEY,
  EmployeeID INT,
  TotalSavings DECIMAL(10,2),
  FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);


CREATE TABLE Absence (
  AbsenceID INT AUTO_INCREMENT PRIMARY KEY,
  EmployeeID INT,
  AbsenceStartDate DATE,
  AbsenceEndDate DATE,
  TotalDaysAbsent INT,
  FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(50) NOT NULL,
    Password VARCHAR(255) NOT NULL
);


INSERT INTO Users (Username, Password) VALUES ('admin', 'password123');



INSERT INTO Employees (EmployeeID, Name, Designation, Experience) VALUES
(1, 'John Doe', 'Software Developer', 3),
(2, 'Jane Smith', 'Graphic Designer', 2),
(3, 'Robert Johnson', 'Systems Analyst', 5),
(4, 'Patricia Brown', 'Project Manager', 7),
(5, 'Michael Davis', 'Database Administrator', 4),
(6, 'Linda Miller', 'Web Developer', 6),
(7, 'William Wilson', 'Quality Assurance', 2),
(8, 'Elizabeth Moore', 'Tech Support Specialist', 3),
(9, 'David Taylor', 'IT Manager', 10),
(10, 'Barbara Anderson', 'Software Engineer', 8),
(11, 'James Thomas', 'Network Engineer', 5),
(12, 'Susan Jackson', 'Data Scientist', 9),
(13, 'Christopher White', 'Product Manager', 4),
(14, 'Karen Harris', 'Scrum Master', 6),
(15, 'Brian Martin', 'UX Designer', 5),
(16, 'Nancy Clark', 'SEO Specialist', 3),
(17, 'Mark Rodriguez', 'Cloud Architect', 7),
(18, 'Betty Lewis', 'Mobile Developer', 4),
(19, 'Paul Walker', 'DevOps Engineer', 8),
(20, 'Jennifer Lee', 'Software Tester', 5),
(21, 'Andrew Hall', 'Business Analyst', 4),
(22, 'Sandra Allen', 'Solutions Architect', 7),
(23, 'Kevin Young', 'Technical Writer', 6),
(24, 'Jessica Hernandez', 'Chief Technology Officer', 12),
(25, 'Daniel King', 'Information Security Analyst', 5),
(26, 'Lisa Wright', 'System Administrator', 4),
(27, 'Matthew Lopez', 'Lead Developer', 9),
(28, 'Amy Hill', 'Chief Information Officer', 10),
(29, 'Jason Scott', 'IT Consultant', 6),
(30, 'Melissa Green', 'Front End Developer', 3);


INSERT INTO SalaryDetails (SalaryID, EmployeeID, CurrentSalary) VALUES
(1, 1, 56513.00),
(2, 2, 66376.00),
(3, 3, 52343.00),
(4, 4, 52585.00),
(5, 5, 55896.00),
(6, 6, 51728.00),
(7, 7, 60952.00),
(8, 8, 59575.00),
(9, 9, 65020.00),
(10, 10, 56376.00),
(11, 11, 56819.00),
(12, 12, 64967.00),
(13, 13, 64380.00),
(14, 14, 57000.00),
(15, 15, 61859.00),
(16, 16, 68295.00),
(17, 17, 65897.00),
(18, 18, 54603.00),
(19, 19, 65324.00),
(20, 20, 52813.00),
(21, 21, 58094.00),
(22, 22, 62029.00),
(23, 23, 65862.00),
(24, 24, 53227.00),
(25, 25, 58549.00),
(26, 26, 63063.00),
(27, 27, 69668.00),
(28, 28, 69153.00),
(29, 29, 66761.00),
(30, 30, 56345.00);


INSERT INTO SalaryIncrements (IncrementID, EmployeeID, EffectiveDate, IncrementAmount) VALUES
(1, 1, '2023-12-05', 1144.00),
(2, 2, '2023-12-05', 1818.00),
(3, 3, '2023-12-05', 2660.00),
(4, 4, '2023-12-05', 2847.00),
(5, 5, '2023-12-05', 1257.00),
(6, 6, '2023-12-05', 2741.00),
(7, 7, '2023-12-05', 2935.00),
(8, 8, '2023-12-05', 1455.00),
(9, 9, '2023-12-05', 1469.00),
(10, 10, '2023-12-05', 1979.00),
(11, 11, '2023-12-05', 2491.00),
(12, 12, '2023-12-05', 1515.00),
(13, 13, '2023-12-05', 1106.00),
(14, 14, '2023-12-05', 1985.00),
(15, 15, '2023-12-05', 1605.00),
(16, 16, '2023-12-05', 1073.00),
(17, 17, '2023-12-05', 1549.00),
(18, 18, '2023-12-05', 1528.00),
(19, 19, '2023-12-05', 1994.00),
(20, 20, '2023-12-05', 2384.00),
(21, 21, '2023-12-05', 2939.00),
(22, 22, '2023-12-05', 2545.00),
(23, 23, '2023-12-05', 2907.00),
(24, 24, '2023-12-05', 1902.00),
(25, 25, '2023-12-05', 1790.00),
(26, 26, '2023-12-05', 2245.00),
(27, 27, '2023-12-05', 2854.00),
(28, 28, '2023-12-05', 2537.00),
(29, 29, '2023-12-05', 1124.00),
(30, 30, '2023-12-05', 1010.00);







INSERT INTO Absence (AbsenceID, EmployeeID, AbsenceStartDate, AbsenceEndDate, TotalDaysAbsent) VALUES
(1, 1, '2023-01-10', '2023-01-14', 5),
(2, 2, '2023-02-05', '2023-02-07', 3),
(3, 3, '2023-03-12', '2023-03-13', 2),
(4, 4, '2023-04-20', '2023-04-21', 2),
(5, 5, '2023-05-01', '2023-05-04', 4),
(6, 6, '2023-06-15', '2023-06-16', 2),
(7, 7, '2023-07-08', '2023-07-12', 5),
(8, 8, '2023-08-03', '2023-08-06', 4),
(9, 9, '2023-09-22', '2023-09-24', 3),
(10, 10, '2023-10-18', '2023-10-22', 5),
(11, 11, '2023-11-07', '2023-11-09', 3),
(12, 12, '2023-12-01', '2023-12-02', 2),
(13, 13, '2023-01-23', '2023-01-26', 4),
(14, 14, '2023-02-11', '2023-02-15', 5),
(15, 15, '2023-03-06', '2023-03-07', 2),
(16, 16, '2023-04-04', '2023-04-05', 2),
(17, 17, '2023-05-20', '2023-05-23', 4),
(18, 18, '2023-06-09', '2023-06-12', 4),
(19, 19, '2023-07-17', '2023-07-19', 3),
(20, 20, '2023-08-14', '2023-08-18', 5),
(21, 21, '2023-09-03', '2023-09-04', 2),
(22, 22, '2023-10-25', '2023-10-28', 4),
(23, 23, '2023-11-16', '2023-11-20', 5),
(24, 24, '2023-12-05', '2023-12-08', 4),
(25, 25, '2023-01-15', '2023-01-17', 3),
(26, 26, '2023-02-28', '2023-03-03', 4),
(27, 27, '2023-04-08', '2023-04-11', 4),
(28, 28, '2023-05-29', '2023-05-30', 2),
(29, 29, '2023-06-21', '2023-06-23', 3),
(30, 30, '2023-07-26', '2023-07-30', 5);




INSERT INTO SalaryInHand (EmployeeID, NetSalary, TaxDeduction, Fund, OtherDeductions)
SELECT
    sd.EmployeeID,
    CASE
        WHEN a.TotalDaysAbsent > 2 THEN sd.CurrentSalary * (0.8 - ((a.TotalDaysAbsent - 2) * 0.01))
        ELSE sd.CurrentSalary * 0.8
    END AS NetSalary,
    sd.CurrentSalary * 0.1 AS TaxDeduction,
    sd.CurrentSalary * 0.05 AS Fund,
    sd.CurrentSalary * 0.05 AS OtherDeductions
FROM SalaryDetails sd
JOIN Absence a ON sd.EmployeeID = a.EmployeeID;





INSERT INTO Savings (EmployeeID, TotalSavings)
SELECT 
    sih.EmployeeID, 
    sih.NetSalary * 0.10 AS TotalSavings
FROM 
    SalaryInHand sih;
